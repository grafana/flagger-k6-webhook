name: Docker

on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main

env:
  REGISTRY_IMAGE: ghcr.io/grafana/flagger-k6-webhook
  TAG_CONFIG: |
    type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    type=raw,value={{tag}},enable=${{ startsWith(github.ref, 'refs/tags/') && github.event_name == 'push' }}
    type=sha,enable=${{ github.event_name == 'pull_request' }}

jobs:
  # We create a docker image per platform in this first step:
  build:
    strategy:
      fail-fast: false
      # Based on
      # https://github.com/orgs/community/discussions/26253#discussioncomment-6745038
      # we only want amd64 images to be built for PRs to speed up the feedback
      # loop:
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
        isPR:
          - ${{ github.event_name == 'pull_request' }}
        include:
          - platform: linux/amd64
        exclude:
          - isPR: true

    runs-on: ubuntu-latest

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # Workaround for https://github.com/actions/checkout/issues/1467 as the
          # project is not that large:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@53851d14592bedcffcf25ea515637cff71ef929a # v3.3.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: ${{ env.TAG_CONFIG }}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@67a2d409c0a876cbe6b11854e3e25193efe4e62d # v6.12.0
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=${{ github.event_name != 'pull_request' }}

      - name: Export digest
        id: digest
        if: github.event_name != 'pull_request'
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"          
          echo "artifact_name=digests-${{ matrix.platform }}" | sed -e 's/\//-/g' >> "$GITHUB_OUTPUT"

      - name: Upload digest
        if: github.event_name != 'pull_request'
        uses: actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08 # v4.6.0
        with:
          name: ${{ steps.digest.outputs.artifact_name }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    needs:
      - build
    steps:
      - name: Download digests (linux/amd64)
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: digests-linux-amd64
          path: /tmp/digests-linux-amd64

      - name: Download digests (linux/arm64)
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: digests-linux-arm64
          path: /tmp/digests-linux-arm64

      - name: Merge digests
        run: |
          mkdir -p /tmp/digests
          cp /tmp/digests-linux-amd64/* /tmp/digests/
          cp /tmp/digests-linux-arm64/* /tmp/digests/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 # v3.8.0

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: ${{ env.TAG_CONFIG }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
